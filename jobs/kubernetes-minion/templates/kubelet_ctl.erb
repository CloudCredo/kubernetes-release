#!/bin/bash

ROOT_DIR=/var/vcap/data/kubelet
RUN_DIR=/var/vcap/sys/run/kubelet
MANIFEST_DIR=${RUN_DIR}/manifests
CERT_DIR=${RUN_DIR}/certs
DOCKER_BOSH_RELEASE_PID=/var/vcap/sys/run/docker/docker.pid
KUBERNETES_DOCKER_PID=/var/run/docker.pid

PIDFILE=${RUN_DIR}/kubelet.pid

source /var/vcap/packages/common/utils.sh
source /var/vcap/jobs/kubernetes-minion/config/env.sh

case $1 in

  start)
    pid_guard $PIDFILE "kubelet"

    mkdir -p $ROOT_DIR
    mkdir -p $MANIFEST_DIR
    mkdir -p $CERT_DIR

    if [ -f "${DOCKER_BOSH_RELEASE_PID}" ]; then
      ln -sf ${DOCKER_BOSH_RELEASE_PID} ${KUBERNETES_DOCKER_PID}
    else
      echo "Unable to find the Docker daemon pid from the BOSH release"
      echo "This pid is required for K8S container manager"
      echo "Path: ${DOCKER_BOSH_RELEASE_PID}"
      exit 1
    fi

    <% p('manifest-dirs').each do |dir| %>
    cp <%= dir %>/* ${MANIFEST_DIR}
    <% end %>

    echo $$ > $PIDFILE

    <% addr = spec.networks.to_h.values.first.ip %>
    exec /var/vcap/packages/kubernetes/bin/kubelet \
--address=<%= addr %> \
--allow-privileged=true \
--port=10250 \
--hostname_override=<%= addr %> \
--api-servers=<%= p('apiserver.hosts').map { |h| "http://#{h}:8080" }.join ',' %> \
--cert-dir=$CERT_DIR \
--logtostderr=true \
--docker-endpoint=unix:///var/vcap/sys/run/docker/docker.sock \
--root-dir=$ROOT_DIR \
--config=${MANIFEST_DIR} \
--cloud-provider=<%= p('cloud-provider') %> \
--cluster_dns=10.0.0.10 \
--cluster_domain=cluster.local \
<% if_p('schedulable') do |schedulable| %>--register-schedulable=<%= schedulable.to_s %><% end %>
    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;

  *)
    echo "Usage: kubelet_ctl {start|stop}"

    ;;

esac
